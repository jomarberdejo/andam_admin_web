// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Agency {
  PNP
  BFP
  LGU
  MDRRMO
}

// enum Role {
//   SUPER_ADMIN
//   ADMIN
// }

model User {
  id           String         @id @default(uuid())
  name         String?
  username     String         @unique
  email        String?        @unique
  password     String
  agency       Agency         @default(MDRRMO)
  createdAt    DateTime       @default(now())
  Login        Entry[]
  Announcement Announcement[]
}

// model User {
//   id        String    @id @default(uuid())
//   name      String?
//   username  String    @unique @db.VarChar(255) @map(name: "username", dbtype: "varchar(255) COLLATE utf8_bin")
//   email     String?   @unique
//   password  String    @db.VarChar(255) @map(name: "password", dbtype: "varchar(255) COLLATE utf8_bin")
//   agency    Agency    @default(MDRRMO)
//   createdAt DateTime  
// }

model Report {
  id         String    @id @default(uuid())
  detail     String    @db.LongText
  latitude   Float
  longitude  Float
  location   String
  agency     Agency    @default(MDRRMO)
  isNew      Boolean   @default(true)
  reportedAt String
  Resident   Resident? @relation(fields: [residentId], references: [id])
  residentId String?
}

model Contact {
  id     String  @id @default(uuid())
  number String? @unique
  agency Agency
}

model Entry {
  id     String  @id @default(uuid())
  date   String
  agency Agency?
  User   User    @relation(fields: [userId], references: [id])
  userId String
}

model Resident {
  id               String     @id @default(uuid())
  username         String     @unique
  password         String
  fullName         String
  email            String?    @unique
  imageIdentityUrl String
  contactNumber    String
  registeredAt     DateTime   @default(now())
  reports          Report[]
  agreement        Agreement? @relation(fields: [agreementId], references: [id])
  agreementId      String?
  feedbacks        Feedback[]
}

model Agreement {
  id       String     @id @default(uuid())
  agreedAt DateTime   @default(now())
  Resident Resident[]
}

model Feedback {
  id             String    @id @default(uuid())
  feedbackDetail String
  agency         Agency
  createdAt      String
  Resident       Resident? @relation(fields: [residentId], references: [id])
  residentId     String?
}

model Announcement {
  id          String @id @default(uuid())
  title       String
  detail      String
  announcedAt String
  user        User   @relation(fields: [userId], references: [id])
  userId      String
}
